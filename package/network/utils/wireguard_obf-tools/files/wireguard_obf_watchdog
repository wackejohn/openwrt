#!/bin/sh
# SPDX-License-Identifier: GPL-2.0
#
# Copyright (C) 2018 Aleksandr V. Piskunov <aleksandr.v.piskunov@gmail.com>.
# Copyright (C) 2015-2018 Jason A. Donenfeld <Jason@zx2c4.com>. All Rights Reserved.
#
# This watchdog script tries to re-resolve hostnames for inactive WireGuard peers.
# Use it for peers with a frequently changing dynamic IP.
# persistent_keepalive must be set, recommended value is 25 seconds.
#
# Run this script from cron every minute:
# echo '* * * * * /usr/bin/wireguard_watchdog' >> /etc/crontabs/root


. /lib/functions.sh
. /lib/functions/network.sh

check_peer_activity() {
  local cfg=$1
  local iface=$2
  local disabled
  local public_key
  local endpoint_host
  local endpoint_port
  local persistent_keepalive
  local last_handshake
  local idle_seconds
  local update_route

  config_get_bool disabled "${cfg}" "disabled" 0
  config_get public_key "${cfg}" "public_key"
  config_get endpoint_host "${cfg}" "endpoint_host"
  config_get endpoint_port "${cfg}" "endpoint_port"
  config_get update_route "${cfg}" "update_route"

  if [ "${disabled}" -eq 1 ]; then
    # skip disabled peers
    return 0
  fi

  persistent_keepalive=$(wg_obf show ${iface} persistent-keepalive | grep ${public_key} | awk '{print $2}')

  # only process peers with endpoints and keepalive set
  [ -z ${endpoint_host} ] && return 0;
  [ -z ${persistent_keepalive} -o ${persistent_keepalive} = "off" ] && return 0;

  # skip IP addresses
  # check taken from packages/net/ddns-scripts/files/dynamic_dns_functions.sh
  local IPV4_REGEX="[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}"
  local IPV6_REGEX="\(\([0-9A-Fa-f]\{1,4\}:\)\{1,\}\)\(\([0-9A-Fa-f]\{1,4\}\)\{0,1\}\)\(\(:[0-9A-Fa-f]\{1,4\}\)\{1,\}\)"
  local IPV4=$(echo ${endpoint_host} | grep -m 1 -o "$IPV4_REGEX$")    # do not detect ip in 0.0.0.0.example.com
  local IPV6=$(echo ${endpoint_host} | grep -m 1 -o "$IPV6_REGEX")
  [ -n "${IPV4}" -o -n "${IPV6}" ] && return 0;

  # re-resolve endpoint hostname if not responding for too long
  last_handshake=$(wg_obf show ${iface} latest-handshakes | grep ${public_key} | awk '{print $2}')
  [ -z ${last_handshake} ] && return 0;
  idle_seconds=$(($(date +%s)-${last_handshake}))
  [ ${idle_seconds} -lt 150 ] && return 0;
  logger -t "wireguard_obf_monitor" "${iface} endpoint ${endpoint_host}:${endpoint_port} is not responding for ${idle_seconds} seconds, trying to re-resolve hostname"
  if [ "${update_route}" == "1" ]; then
    local wan
    local device
    local ipaddr
    local gateway
    local metric
    local peer_ip
    local route_check
    wan=`uci show network | grep interface | grep tr069 | grep -v vpn | grep -v route | cut -c 9- | cut -d = -f 1`
    device=`network_get_device dev "${wan}"; echo ${dev}`
    ipaddr=`network_get_ipaddr addr "${wan}"; echo ${addr}`
    gateway=`network_get_gateway gw  "${wan}"; echo ${gw}`
    metric=`network_get_metric me "${wan}"; echo ${me}`
    peer_ip=`nslookup ${endpoint_host} | grep Address | cut -d " " -f 2 |grep -v Address`
    route_check=`ip route | grep -c "${peer_ip}"`
    logger -t "wireguard_obf_monitor" "${iface} endpoint ${endpoint_host}:${endpoint_port} update route enabled, trying update route"
    if [ "${route_check}" == "0" ]; then
        logger -t "wireguard_obf_monitor" "${iface} endpoint ${endpoint_host}:${endpoint_port} peer ip (${peer_ip}) is not in routing table, adding to route"
        ip route add ${peer_ip} via ${gateway} dev ${device} proto static metric ${metric}
    fi
  fi
  if [ "`echo ${endpoint_port} | grep -c '-'`" == "1" ]; then
      endpoint_port=`shuf -i ${endpoint_port} -n 1`
  fi
  wg_obf set ${iface} peer ${public_key} endpoint "${endpoint_host}:${endpoint_port}"
}

# query ubus for all active wireguard interfaces
wg_ifaces=$(ubus -S call network.interface dump | jsonfilter -e '@.interface[@.up=true]' | jsonfilter -a -e '@[@.proto="wireguard_obf"].interface' | tr "\n" " ")

# check every peer in every active wireguard interface
config_load network
for iface in $wg_ifaces; do
  config_foreach check_peer_activity "wireguard_obf_${iface}" "${iface}"
done
